<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/rabbit
        http://www.springframework.org/schema/rabbit/spring-rabbit-1.4.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-3.2.xsd">

	<tx:annotation-driven />
	<context:annotation-config />
	<task:annotation-driven/>
	<context:component-scan base-package="com.wepiao.*" />
	<aop:aspectj-autoproxy />  

	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" >
		<property name="fileEncoding" value="utf8" />
		<property name="locations">
			<list>
				<value>classpath*:conf/redis.properties</value>
				<value>classpath*:conf/jdbc.properties</value>
				<value>classpath*:conf/config.properties</value>
			</list>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="true" />   
	</bean>
	
    <!-- redis 配置 -->
	<bean id="jedisPoolConfig" class="org.apache.commons.pool2.impl.GenericObjectPoolConfig">
		<property name="maxTotal" value="${redis.pool.maxTotal}" />
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<property name="minIdle" value="${redis.pool.minIdle}" />
		<property name="timeBetweenEvictionRunsMillis" value="${redis.pool.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${redis.pool.minEvictableIdleTimeMillis}"/>
		<property name="testWhileIdle" value="true" />
	</bean>
	<!-- 用户中心标签  redis 配置 -->
	<bean id="jedisPoolConfig4Tag" class="org.apache.commons.pool2.impl.GenericObjectPoolConfig">
		<property name="maxTotal" value="${redis.tag.pool.maxTotal}" />
		<property name="maxIdle" value="${redis.tag.pool.maxIdle}" />
		<property name="minIdle" value="${redis.tag.pool.minIdle}" />
		<property name="timeBetweenEvictionRunsMillis" value="${redis.pool.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${redis.pool.minEvictableIdleTimeMillis}"/>
		<property name="testWhileIdle" value="true" />
	</bean>
	
	<!-- 用户中心标签  uid生成   配置 -->
	<bean id="jedisPoolConfig4Uid" class="org.apache.commons.pool2.impl.GenericObjectPoolConfig">
		<property name="maxTotal" value="${redis.uid.pool.maxTotal}" />
		<property name="maxIdle" value="${redis.uid.pool.maxIdle}" />
		<property name="minIdle" value="${redis.uid.pool.minIdle}" />
		<property name="timeBetweenEvictionRunsMillis" value="${redis.pool.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${redis.pool.minEvictableIdleTimeMillis}"/>
		<property name="testWhileIdle" value="true" />
	</bean>
	<!-- bean id="jedisCluster" class="redis.clients.jedis.JedisCluster">
		<constructor-arg index="0">
			<set>
				<bean class="redis.clients.jedis.HostAndPort">
					<constructor-arg index="0" value="${redis.cluster.ip}" />
					<constructor-arg index="1" value="${redis.cluster.port}" type="int" />
				</bean>
			</set>
		</constructor-arg>
		<constructor-arg index="1" ref="jedisPoolConfig" />
	</bean-->

	<!-- 用户中心Core redis 配置 -->
	<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1">
			<list>
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg index="0" value="${redis.server.0.ip}" />
					<constructor-arg index="1" value="${redis.server.0.port}" type="int" />
				</bean>
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg index="0" value="${redis.server.1.ip}" />
					<constructor-arg index="1" value="${redis.server.1.port}" type="int" />
				</bean>
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg index="0" value="${redis.server.2.ip}" />
					<constructor-arg index="1" value="${redis.server.2.port}" type="int" />
				</bean>
			</list>
		</constructor-arg>
	</bean>
	
	<!-- 用户中心静态标签 redis 配置 -->
	<bean id="shardedJedisPool4StaticTag" class="redis.clients.jedis.ShardedJedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig4Tag" />
		<constructor-arg index="1">
			<list>
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg index="0" value="${redis.static.tag.server.0.ip}" />
					<constructor-arg index="1" value="${redis.static.tag.server.0.port}" type="int" />
				</bean>
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg index="0" value="${redis.static.tag.server.1.ip}" />
					<constructor-arg index="1" value="${redis.static.tag.server.1.port}" type="int" />
				</bean>
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg index="0" value="${redis.static.tag.server.2.ip}" />
					<constructor-arg index="1" value="${redis.static.tag.server.2.port}" type="int" />
				</bean>
			</list>
		</constructor-arg>
	</bean>
	
	<!-- 用户中心tag redis 配置 （为动态标签准备）-->
	<bean id="shardedJedisPool4DynamicTag" class="redis.clients.jedis.ShardedJedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig4Tag" />
		<constructor-arg index="1">
			<list>
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg index="0" value="${redis.dynamic.tag.server.0.ip}" />
					<constructor-arg index="1" value="${redis.dynamic.tag.server.0.port}" type="int" />
				</bean>
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg index="0" value="${redis.dynamic.tag.server.1.ip}" />
					<constructor-arg index="1" value="${redis.dynamic.tag.server.1.port}" type="int" />
				</bean>
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg index="0" value="${redis.dynamic.tag.server.2.ip}" />
					<constructor-arg index="1" value="${redis.dynamic.tag.server.2.port}" type="int" />
				</bean>
			</list>
		</constructor-arg>
	</bean>
	
	<!-- 用户中uid发号器  redis 配置 -->
	<bean id="shardedJedisPool4UidGen" class="redis.clients.jedis.ShardedJedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig4Uid" />
		<constructor-arg index="1">
			<list>
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg index="0" value="${redis.gen.uid.server.ip}" />
					<constructor-arg index="1" value="${redis.gen.uid.server.port}" type="int" />
				</bean>
			</list>
		</constructor-arg>
	</bean>
	
    <!-- 连接老用户体系DB的datasource -->
	<bean id="dataSourceLegacy" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="${jdbc.legacy.url}" />
		<property name="username" value="${jdbc.legacy.username}" />
		<property name="password" value="${jdbc.legacy.password}" />
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="20" />
		<property name="maxWait" value="5000" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="false" />
		<property name="filters" value="stat" />
	</bean>

    <!-- 分库分表的datasource -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />

		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="20" />

		<property name="maxWait" value="5000" />

		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="false" />

		<property name="filters" value="stat" />
	</bean>
	
	<bean id="dataSource1" parent="dataSource">
		<property name="url" value="${jdbc.1.url}" />
		<property name="username" value="${jdbc.1.username}" />
		<property name="password" value="${jdbc.1.password}" />
	</bean>

	<!-- mybatis3与spring整合 -->
	<bean id="sqlSessionFactoryLegacyUsers" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:conf/mybatis-config.xml" />
		<property name="dataSource" ref="dataSourceLegacy" />
	</bean> 
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:conf/mybatis-config.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="sqlSessionFactory1" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:conf/mybatis-config.xml" />
		<property name="dataSource" ref="dataSource1" />
	</bean>

	<bean id="sessionMutilSourceDaoSupport" class="com.wepiao.admin.user.common.SqlSessionMutilSourceDaoSupport">
		<property name="sessionFactoryList" >
			<list>
				<ref bean="sqlSessionFactory"/>
				<ref bean="sqlSessionFactory1"/>
			</list>
		</property>
		<property name="tableCount" value="${jdbc.tableCount}" />
		<property name="sqlSessionFactoryLegacyUsers" ref="sqlSessionFactoryLegacyUsers" />
	</bean>

	<!-- bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceIdGen" />
	</bean>

	<bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_NOT_SUPPORTED,-Exception</prop>
			</props>
		</property>
	</bean-->

	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize">
			<value>104857600</value>
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>
</beans>
